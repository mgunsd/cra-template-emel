{"ast":null,"code":"import buildContext from './buildContext';\nimport { unsplash } from 'api';\n\nconst aReducer = (state, action) => {\n  switch (action.type) {\n    case 'set-images':\n      return { ...state,\n        images: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst SearchImages = dispatch => async term => {\n  const response = await unsplash.get(\"/search/photos\", {\n    params: {\n      query: term\n    }\n  });\n  dispatch({\n    type: 'set-images',\n    payload: response.data.results\n  });\n};\n\nexport const {\n  Provider,\n  Context\n} = buildContext(aReducer, {\n  SearchImages\n}, {\n  images: [],\n  term: 'nature'\n});","map":{"version":3,"sources":["/Users/e/Documents/'prod/Emel/emel/src/context/SampleContext.js"],"names":["buildContext","unsplash","aReducer","state","action","type","images","payload","SearchImages","dispatch","term","response","get","params","query","data","results","Provider","Context"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,KAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,MAAM,EAAEF,MAAM,CAACG;AAA3B,OAAP;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMK,YAAY,GAAGC,QAAQ,IAAI,MAAOC,IAAP,IAAgB;AAC/C,QAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,GAAT,CAAa,gBAAb,EAA+B;AACpDC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAEJ;AAAT;AAD4C,GAA/B,CAAvB;AAGAD,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAE,YAAR;AAAsBE,IAAAA,OAAO,EAAEI,QAAQ,CAACI,IAAT,CAAcC;AAA7C,GAAD,CAAR;AACD,CALD;;AAOA,OAAO,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAwBlB,YAAY,CAC/CE,QAD+C,EAE/C;AAAEM,EAAAA;AAAF,CAF+C,EAG/C;AAAEF,EAAAA,MAAM,EAAE,EAAV;AAAcI,EAAAA,IAAI,EAAE;AAApB,CAH+C,CAA1C","sourcesContent":["import buildContext from './buildContext';\nimport { unsplash } from 'api';\n\nconst aReducer = (state, action) => {\n  switch (action.type) {\n    case 'set-images':\n      return { ...state, images: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst SearchImages = dispatch => async (term) => {\n  const response = await unsplash.get(\"/search/photos\", {\n    params: { query: term },\n  });\n  dispatch({ type: 'set-images', payload: response.data.results })\n};\n\nexport const { Provider, Context } = buildContext(\n  aReducer,\n  { SearchImages },\n  { images: [], term: 'nature' }\n);"]},"metadata":{},"sourceType":"module"}